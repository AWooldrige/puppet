#!/usr/bin/env bash
#########################################################################
##   This file is controlled by Puppet - changes will be overwritten   ##
#########################################################################


if /usr/bin/[ "$#" -ne 2 ]; then
    /bin/echo "Usage: $0 <backup|restore> <wordpress_instance_identifier>"
    exit 1
fi

action="$1"
wp_id="$2"
wpcontent_path="/var/www/"$wp_id"/wp-content"
uploads_path=$wpcontent_path"/uploads"
backup_path="/bkps/wordpress-incremental/"$wp_id
info="[INFO] "

if /usr/bin/[ ! -d $wpcontent_path ]; then
    /bin/echo "WordPress id $wp_id doesn't exist. Couldn't find $wp_path"
    exit 2
fi


if /usr/bin/[ $action = "backup" ]; then
    echo $info"=== Generating Backup for "$wp_id" ==="

    echo $info"Cleaning out backups directory "$backup_path
    /bin/rm -rf $backup_path
    /bin/mkdir -p $backup_path

    echo $info"Creating hardling mirror of "$uploads_path
    /bin/cp -al $uploads_path $backup_path

    echo $info"Dumping MySQL database "$wp_id
    /usr/bin/mysqldump $wp_id > $backup_path"/"$wp_id".sql"
    exit 0
fi

if /usr/bin/[ $action = "restore" ]; then
    echo $info"=== Restoring Backup for "$wp_id" ==="

    echo $info"Cleaning out uploads directory "$uploads_path
    /bin/rm -rf $uploads_path

    echo $info"Copying files from "$backup_path" to "$uploads_path
    /bin/cp -al $backup_path/uploads $wpcontent_path

    echo $info"Dropping any tables currently in the database"
    /usr/bin/mysqldump --no-data --add-drop-table $wp_id | /bin/grep ^DROP | /usr/bin/mysql $wp_id

    echo $info"Restoring database "
    /usr/bin/mysql $wp_id < $backup_path"/"$wp_id".sql"

    exit 0
fi

/bin/echo "Action needs to be either 'backup' or 'restore'"
exit 1
